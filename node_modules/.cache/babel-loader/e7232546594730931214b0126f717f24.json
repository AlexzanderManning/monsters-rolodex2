{"ast":null,"code":"var _jsxFileName = \"/Users/deontemanning/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      // initial state is empty we wait until fetch completes\n      searchfield: ''\n    };\n  } //Waits until our component mounts\n\n\n  componentDidMount() {\n    //fetch returns a promise.\n    fetch('https://jsonplaceholder.typicode.com/users') //returns a new promise\n    .then(response => response.json()).then(users => this.setState({\n      monsters: users\n    })); //fills monsters state\n  }\n\n  render() {\n    // const monsters = this.state.monsters;\n    // const searchField = this.state.searchField;\n    //Destructruing is an easeir way of doing the above.\n    //Destrucuting allows you to pull properties from an object and set them to variables.\n    const _this$state = this.state,\n          monsters = _this$state.monsters,\n          searchField = _this$state.searchField;\n    const filteredMonsters = 5;\n    console.log(filteredMonsters);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"search\",\n      placeholder: \"search monsters\",\n      onChange: e => this.setState({\n        searchField: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      monsters: this.state.monsters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/deontemanning/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","App","constructor","state","monsters","searchfield","componentDidMount","fetch","then","response","json","users","setState","render","searchField","filteredMonsters","console","log","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,QAAR,QAAuB,4CAAvB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AACzBG,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AACG;AACdC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID,GAPwB,CASzB;;;AACAC,EAAAA,iBAAiB,GAAE;AACjB;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACA;AADA,KAEGC,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFpB,EAGGF,IAHH,CAGQG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACR,MAAAA,QAAQ,EAAEO;AAAX,KAAd,CAHjB,EAFiB,CAKmC;AACrD;;AAEDE,EAAAA,MAAM,GAAE;AACN;AACA;AACA;AACA;AAJM,wBAK4B,KAAKV,KALjC;AAAA,UAKEC,QALF,eAKEA,QALF;AAAA,UAKYU,WALZ,eAKYA,WALZ;AAMN,UAAMC,gBAAgB,GAAG,CAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AACC,MAAA,WAAW,EAAC,iBADb;AAEC,MAAA,QAAQ,EAAEG,CAAC,IAAI,KAAKN,QAAL,CAAc;AAACE,QAAAA,WAAW,EAAEI,CAAC,CAACC,MAAF,CAASC;AAAvB,OAAd,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAUD;;AArCwB;;AAwC3B,eAAeH,GAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters: [], // initial state is empty we wait until fetch completes\n      searchfield: ''\n    };\n  }\n\n  //Waits until our component mounts\n  componentDidMount(){\n    //fetch returns a promise.\n    fetch('https://jsonplaceholder.typicode.com/users')\n    //returns a new promise\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users})); //fills monsters state\n  }\n\n  render(){\n    // const monsters = this.state.monsters;\n    // const searchField = this.state.searchField;\n    //Destructruing is an easeir way of doing the above.\n    //Destrucuting allows you to pull properties from an object and set them to variables.\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = 5;\n    console.log(filteredMonsters);\n\n    return(\n      <div className=\"App\">\n        <input type=\"search\"\n         placeholder=\"search monsters\" \n         onChange={e => this.setState({searchField: e.target.value})}\n         />\n        <CardList monsters={this.state.monsters} />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}