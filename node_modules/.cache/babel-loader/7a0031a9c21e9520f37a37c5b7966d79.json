{"ast":null,"code":"import _classCallCheck from\"/Users/deontemanning/monsters-rolodex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/deontemanning/monsters-rolodex/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/deontemanning/monsters-rolodex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/deontemanning/monsters-rolodex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/deontemanning/monsters-rolodex/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{CardList}from\"./components/card-list/card-list.component\";import SearchForm from'./components/search-form/search-form.component';import'./App.css';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this));_this.handleChange=function(e){_this.setState({searchField:e.target.value});};_this.state={monsters:[],// initial state is empty we wait until fetch completes\nsearchField:''};//Binding this to handelChange\n// this.handleChange = this.handleChange.bind(this);\nreturn _this;}//Waits until our component mounts\n_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//fetch returns a promise.\nfetch('https://jsonplaceholder.typicode.com/users')//returns a new promise\n.then(function(response){return response.json();}).then(function(users){return _this2.setState({monsters:users});});//fills monsters state\n}// handleChange(e){\n//   //Will not work because this is not set within a function. \n//   //this has to be bound to the app component in our constructor\n//   this.setState({searchField: e.target.value});\n// }\n//this is automatically bound to to the context the function was defined.\n//this === App component.\n},{key:\"render\",value:function render(){// const monsters = this.state.monsters;\n// const searchField = this.state.searchField;\n//Destructruing is an easeir way of doing the above.\n//Destrucuting allows you to pull properties from an object and set them to variables.\nvar _this$state=this.state,monsters=_this$state.monsters,searchField=_this$state.searchField;var filteredMonsters=monsters.filter(function(monster){return monster.name.toLowerCase().includes(searchField.toLowerCase());});return React.createElement(\"div\",{className:\"App\"},React.createElement(\"h1\",null,\"Monsters Rolodex\"),React.createElement(SearchForm,{className:\"search\",type:\"search\",placeholder:\"Search Monsters....\",handleChange:this.handleChange}),React.createElement(CardList,{monsters:filteredMonsters}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/deontemanning/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","SearchForm","App","handleChange","e","setState","searchField","target","value","state","monsters","fetch","then","response","json","users","filteredMonsters","filter","monster","name","toLowerCase","includes"],"mappings":"smBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CAEA,OAAQC,QAAR,KAAuB,4CAAvB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,gDAAvB,CACA,MAAO,WAAP,C,GAEMC,CAAAA,G,6DACJ,cAAa,qCACX,uEADW,MA2BbC,YA3Ba,CA2BE,SAACC,CAAD,CAAO,CACpB,MAAKC,QAAL,CAAc,CAACC,WAAW,CAAEF,CAAC,CAACG,MAAF,CAASC,KAAvB,CAAd,EACD,CA7BY,CAEX,MAAKC,KAAL,CAAa,CACXC,QAAQ,CAAE,EADC,CACG;AACdJ,WAAW,CAAE,EAFF,CAAb,CAIA;AACA;AAPW,aAQZ,CAED;6EACmB,iBACjB;AACAK,KAAK,CAAC,4CAAD,CACL;AADA,CAEGC,IAFH,CAEQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAFhB,EAGGF,IAHH,CAGQ,SAAAG,KAAK,QAAI,CAAA,MAAI,CAACV,QAAL,CAAc,CAACK,QAAQ,CAAEK,KAAX,CAAd,CAAJ,EAHb,EAGoD;AACrD,CAED;AACA;AACA;AACA;AACA;AACC;AACA;uCAQO,CACN;AACA;AACA;AACA;AAJM,gBAK4B,KAAKN,KALjC,CAKEC,QALF,aAKEA,QALF,CAKYJ,WALZ,aAKYA,WALZ,CAMN,GAAMU,CAAAA,gBAAgB,CAAGN,QAAQ,CAACO,MAAT,CACvB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCf,WAAW,CAACc,WAAZ,EAApC,CAAJ,EADgB,CAAzB,CAIA,MACE,4BAAK,SAAS,CAAC,KAAf,EACE,iDADF,CAEE,oBAAC,UAAD,EACC,SAAS,CAAC,QADX,CAEC,IAAI,CAAC,QAFN,CAGC,WAAW,CAAC,qBAHb,CAIC,YAAY,CAAE,KAAKjB,YAJpB,EAFF,CAQE,oBAAC,QAAD,EAAU,QAAQ,CAAEa,gBAApB,EARF,CADF,CAaD,C,iBAzDejB,S,EA4DlB,cAAeG,CAAAA,GAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport {CardList} from \"./components/card-list/card-list.component\";\n\nimport SearchForm from './components/search-form/search-form.component';\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters: [], // initial state is empty we wait until fetch completes\n      searchField: ''\n    };\n    //Binding this to handelChange\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  //Waits until our component mounts\n  componentDidMount(){\n    //fetch returns a promise.\n    fetch('https://jsonplaceholder.typicode.com/users')\n    //returns a new promise\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users})); //fills monsters state\n  }\n\n  // handleChange(e){\n  //   //Will not work because this is not set within a function. \n  //   //this has to be bound to the app component in our constructor\n  //   this.setState({searchField: e.target.value});\n  // }\n   //this is automatically bound to to the context the function was defined.\n   //this === App component.\n   \n  handleChange = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n\n\n\n  render(){\n    // const monsters = this.state.monsters;\n    // const searchField = this.state.searchField;\n    //Destructruing is an easeir way of doing the above.\n    //Destrucuting allows you to pull properties from an object and set them to variables.\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(\n      monster => monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return(\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchForm \n         className=\"search\"\n         type=\"search\"\n         placeholder=\"Search Monsters....\" \n         handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}